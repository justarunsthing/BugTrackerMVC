@using BugTrackerMVC.Enums
@using Microsoft.AspNetCore.Identity
@using BugTrackerMVC.Interfaces
@model IEnumerable<BugTrackerMVC.Models.Project>

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "Archived Projects";
    var btUser = await UserManager.GetUserAsync(User);
}

<h1>Archived Projects</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageFileData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageContentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsArchived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageFileName)
                </td>
                <td>
                    @if (item.ImageFileData != null && item.ImageFileData.Length > 0)
                    {
                        <img src="data:@item.ImageContentType;base64,@Convert.ToBase64String(item.ImageFileData)" alt="@item.ImageFileName" style="max-width:100px; max-height:100px;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageContentType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsArchived)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority.Id)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |

                    @{
                        bool isProjectPm = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == btUser.Id;
                    }

                    @if (User.IsInRole(nameof(Roles.Admin)) || isProjectPm)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
